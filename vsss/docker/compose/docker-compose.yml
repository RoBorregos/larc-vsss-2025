services:
  cpu_base:
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: ${ROS_DOCKERFILE}
      args:
        BASE_IMAGE: ${CPU_BASE_IMAGE}
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}:cpu_base

  cuda_base:
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: ${ROS_DOCKERFILE}
      args:
        BASE_IMAGE: ${CUDA_BASE_IMAGE}
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}:cuda_base

  application_cuda:
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: ${VSSS_DOCKERFILE}
      args:
        BASE_IMAGE: ${BUILT_CUDA_BASE_IMAGE}
        TORCH_INDEX_URL: ${TORCH_INDEX_URL}
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}_cuda
    container_name: ${PROJECT_NAME}_cuda
    runtime: ${NVIDIA_RUNTIME}
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - LIBGL_ALWAYS_INDIRECT=${LIBGL_ALWAYS_INDIRECT}
    volumes:
      - ${X11_SOCKET_PATH}:${X11_SOCKET_PATH}
      - ${WORKSPACE_PATH}:/ros/vsss_ws/src/
    devices:
      - /dev/dri:/dev/dri
    network_mode: ${NETWORK_MODE}
    privileged: ${PRIVILEGED}
    stdin_open: ${STDIN_OPEN}
    tty: ${TTY}
    command: []
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${GPU_COUNT}
              capabilities: [gpu]

  application_gpu:
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: ${VSSS_DOCKERFILE}
      args:
        BASE_IMAGE: ${DOCKER_REGISTRY}/${PROJECT_NAME}:cpu_base
        TORCH_INDEX_URL: ${TORCH_INDEX_URL}
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}_gpu
    container_name: ${PROJECT_NAME}_gpu
    runtime: ${NVIDIA_RUNTIME}
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - LIBGL_ALWAYS_INDIRECT=${LIBGL_ALWAYS_INDIRECT}
    volumes:
      - ${X11_SOCKET_PATH}:${X11_SOCKET_PATH}
      - ${WORKSPACE_PATH}:/ros/vsss_ws/src/
    devices:
      - /dev/dri:/dev/dri
    network_mode: ${NETWORK_MODE}
    privileged: ${PRIVILEGED}
    stdin_open: ${STDIN_OPEN}
    tty: ${TTY}
    command: []

  application_cpu:
    build:
      context: ${BUILD_CONTEXT}
      dockerfile: ${VSSS_DOCKERFILE}
      args:
        BASE_IMAGE: ${BUILT_CPU_BASE_IMAGE}
        TORCH_INDEX_URL: ${TORCH_INDEX_URL}
    image: ${DOCKER_REGISTRY}/${PROJECT_NAME}_cpu
    container_name: ${PROJECT_NAME}_cpu
    network_mode: ${NETWORK_MODE}
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - ${X11_SOCKET_PATH}:${X11_SOCKET_PATH}
      - ${WORKSPACE_PATH}:/ros/vsss_ws/src/
    stdin_open: ${STDIN_OPEN}
    tty: ${TTY}
    privileged: ${PRIVILEGED}
    command: []
